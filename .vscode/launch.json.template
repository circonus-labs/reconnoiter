{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
        {
            // Debug noitd on a busted test
            "name": "(gdb) Opened noitd busted test",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/src/noitd",
            "args": [
                "-D",
                "-c",
                "${fileDirname}/workspace/noit.conf"
            ],
            "stopAtEntry": true,
            "cwd": "${workspaceFolder}/test/busted",
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Ignore SIGPIPE",
                    "text": "handle SIGPIPE nostop noprint pass",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Non-Stop Mode On",
                    "text": "set non-stop on",
                    "ignoreFailures": false
                }
            ],
            "sourceFileMap": {
                "${workspaceFolder}": {
                    "editorPath": "${workspaceFolder}",
                    "useForBreakpoints": "true"
                }
            },
            "logging": {
                "engineLogging": true
            }
        },
        {
            // Debug a shared lib used in lua ffi in a busted test`
            "name": "(gdb) Opened lua ffi busted test",
            "type": "cppdbg",
            "request": "launch",
            "environment": [
                {"name":"ASAN_OPTIONS","value":"detect_leaks=0"},
                {"name":"LD_LIBRARY_PATH","value":"${workspaceFolder}/src"},
// on Ubuntu 20.04, change these paths in following two lines to use 14 and 14.0.6
                {"name":"ASAN_SYMBOLIZER_PATH","value":"/usr/bin/llvm-symbolizer-15"},
                {"name":"LD_PRELOAD","value":"/usr/lib/llvm-15/lib/clang/15.0.7/lib/linux/libclang_rt.asan-x86_64.so"},
            ],
            "program": "/opt/circonus/bin/luamtev",
            "args": [
                "-L",
                "'+/opt/circonus/share/lua/5.1/?.lua;/opt/circonus/share/lua/5.1/?/init.lua'",
                "/opt/circonus/bin/mtevbusted",
                "-X",
                "lua_debug=${fileDirname}",
                "-file",
                "${file}"
            ],
            "stopAtEntry": true,
            "cwd": "${workspaceFolder}/test/busted",
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Ignore SIGPIPE",
                    "text": "handle SIGPIPE nostop noprint pass",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Non-Stop Mode On",
                    "text": "set non-stop on",
                    "ignoreFailures": false
                }
            ],
            "sourceFileMap": {
                "${workspaceFolder}": {
                    "editorPath": "${workspaceFolder}",
                    "useForBreakpoints": "true"
                },
// Used to remap a libmtev packaging build to a home libmtev source folder 
//                "/tmp/bld/libmtev-git": {
//                    "editorPath": "~/libmtev",
//                    "useForBreakpoints": "true"
//                }
            },
            "logging": {
                "engineLogging": true
            }
        },
        {
            // https://github.com/circonus/circonus-wiki/blob/master/Engineering/AdvancedDebugAndTest.md#lua-debugging
            "name": "(lua) Opened busted test",
            "type": "lua-local",
            "request": "launch",
            "program": {
                "command": "./run-tests.sh"
            },
            "args": ["-file", "${file}", "-X", "lua_debug=${fileDirname}"],
            "cwd": "${workspaceFolder}/test/busted",
        },
    ]
}
