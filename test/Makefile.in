.NOTPARALLEL:

CC=@CC@
CPPFLAGS=@CPPFLAGS@
CFLAGS=@CFLAGS@
LDFLAGS=@LDFLAGS@
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@
PGLIBS=@PGLIBS@
INSTALL=@INSTALL@
MTEV_INCLUDEDIR=@MTEV_INCLUDEDIR@
LMTEV=@LMTEV@
MAKE_CTESTS=@MAKE_CTESTS@

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libdir=@libdir@
includedir=${prefix}/include
libexecdir=@libexecdir@
datarootdir = @datarootdir@
mandir=@mandir@
mansubdir=@mansubdir@
docdir=${prefix}/@docdir@
sysconfdir=@sysconfdir@
srcdir=@srcdir@
top_srcdir=@top_srcdir@

all:	testcerts testcrl others test_tags
clean:	clean-keys clean-tests

check:	all
	(cd busted && echo "testing xml" && NOIT_LMDB_FILTERSETS=0 NOIT_LMDB_CHECKS=0 ./run-tests.sh && \
	 echo "testing lmdb" && NOIT_LMDB_FILTERSETS=1 NOIT_LMDB_CHECKS=1 ./run-tests.sh)

check-xml: all
	(cd busted && NOIT_LMDB_FILTERSETS=0 NOIT_LMDB_CHECKS=0 ./run-tests.sh)

check-lmdb: all
	(cd busted && NOIT_LMDB_FILTERSETS=1 NOIT_LMDB_CHECKS=1 ./run-tests.sh)

# This stuff if all cert stuff to make testing the daemons easier

test_tags:	test_tags.c
	$(CC) -g -o test_tags -I../src $(CPPFLAGS) $(CFLAGS) -I$(MTEV_INCLUDEDIR) test_tags.c -L../src -lnoit $(LDFLAGS) $(LMTEV)

others:
	$(MAKE) -C ../src tests

demoCA-dir:
	@mkdir -p demoCA
	@touch demoCA/index.txt
	@test -f demoCA/serial || echo 00 > demoCA/serial

test-ca.key:
	openssl genrsa -out test-ca.key 4096

test-ca.csr:	test-ca.key
	openssl req -sha256 -key test-ca.key -days 365 -new -out test-ca.csr -config demo-openssl.cnf -extensions v3_ca -subj "/C=US/ST=Maryland/O=OmniTI Labs/CN=Reconnoiter Test CA"

test-ca.crt:	test-ca.key test-ca.csr
	openssl x509 -sha256 -req -in test-ca.csr -signkey test-ca.key -out test-ca.crt -extfile demo-openssl.cnf -extensions v3_ca -days 365

client.key:
	openssl genrsa -out client.key 2048

client.csr:	client.key
	openssl req -sha256 -key client.key -days 365 -new -out client.csr -config demo-openssl.cnf -subj "/C=US/ST=Maryland/O=OmniTI Labs/CN=sampleclient"

client.crt:	client.csr test-ca.key test-ca.crt
	openssl ca -batch -config demo-openssl.cnf -in client.csr -out client.crt -outdir . -keyfile test-ca.key -cert test-ca.crt -days 120

badclient.key:
	openssl genrsa -out badclient.key 2048

badclient.csr:	badclient.key
	openssl req -sha256 -key badclient.key -days 365 -new -out badclient.csr -config demo-openssl.cnf -subj "/C=US/ST=Maryland/O=OmniTI Labs/CN=samplebadclient"

badclient.crt:	badclient.csr test-ca.key test-ca.crt
	openssl ca -batch -config demo-openssl.cnf -in badclient.csr -out badclient.crt -outdir . -keyfile test-ca.key -cert test-ca.crt -days 120

test-noit.key:
	openssl genrsa -out test-noit.key 2048

test-noit.csr:	test-noit.key
	openssl req -sha256 -key test-noit.key -days 365 -new -out test-noit.csr -config demo-openssl.cnf -subj "/C=US/ST=Maryland/O=OmniTI Labs/CN=noit-test"

test-noit.crt:	test-noit.csr test-ca.key test-ca.crt
	openssl ca -batch -config demo-openssl.cnf -in test-noit.csr -out test-noit.crt -outdir . -keyfile test-ca.key -cert test-ca.crt -days 120

test-stratcon.key:
	openssl genrsa -out test-stratcon.key 2048

test-stratcon.csr:	test-stratcon.key
	openssl req -sha256 -key test-stratcon.key -days 365 -new -out test-stratcon.csr -config demo-openssl.cnf -subj "/C=US/ST=Maryland/O=OmniTI Labs/CN=stratcon"

test-stratcon.crt:	test-stratcon.csr test-ca.key
	openssl ca -batch -config demo-openssl.cnf -in test-stratcon.csr -out test-stratcon.crt -outdir . -keyfile test-ca.key -cert test-ca.crt -days 120

test-ca.crl:	test-ca.key test-ca.crt badclient.key badclient.crt
	openssl ca -config demo-openssl.cnf  -keyfile test-ca.key -cert test-ca.crt -revoke badclient.crt
	openssl ca -config demo-openssl.cnf  -keyfile test-ca.key -cert test-ca.crt -gencrl -out  test-ca.crl

testcrl:	test-ca.crl

testcerts:	demoCA-dir test-noit.key test-noit.crt test-stratcon.key test-stratcon.crt test-ca.key test-ca.crt client.key client.crt badclient.key badclient.crt

clean-keys:
	rm -f *.key *.csr *.crt *.crl *.pem
	rm -rf demoCA

clean-tests:
	rm -rf t/logs
	rm -f test_tags
	rm -f busted/asan.log*

distclean:	clean
	rm -f Makefile

