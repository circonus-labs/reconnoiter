.SUFFIXES: .lo .@MODULEEXT@ .xml .xmlh

Q=
ifeq ($(V),)
  Q=@
endif

prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@

CC=@CC@
LD=@LD@
LN_S=@LN_S@
CPPFLAGS=@CPPFLAGS@
CFLAGS=@CFLAGS@
DEPFLAGS=@DEPFLAGS@
PGCFLAGS=@PGCFLAGS@
MYCFLAGS=@MYCFLAGS@
SHCFLAGS=@SHCFLAGS@
MODULELD=@MODULELD@
MODULEEXT=@MODULEEXT@
LDFLAGS=@LDFLAGS@
SHLDFLAGS=@SHLDFLAGS@
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@
PGLIBS=@PGLIBS@
MYLIBS=@MYLIBS@
INSTALL=@INSTALL@
MODULES_DIR=@MODULES_DIR@
XSLTPROC=@XSLTPROC@
XMLLINT=@XMLLINT@
XML2H=@top_srcdir@/buildtools/xml2h
LUALIBS=@LUALIBS@

top_srcdir=@top_srcdir@

MODULES=check_test.@MODULEEXT@ ping_icmp.@MODULEEXT@ \
	dns.@MODULEEXT@ selfcheck.@MODULEEXT@ custom_config.@MODULEEXT@ \
	external.@MODULEEXT@ collectd.@MODULEEXT@ httptrap.@MODULEEXT@ \
	ip_acl.@MODULEEXT@ statsd.@MODULEEXT@ ganglia.@MODULEEXT@ \
	resolver_cache.@MODULEEXT@ histogram.@MODULEEXT@ \
	reverse_check.@MODULEEXT@ \
	@BUILD_MODULES@

LUA_MODULES=noit_lua/noit_binding.so noit_lua/snmp.so

SMODULES=@BUILD_SMODULES@ \
	rabbitmq_driver.@MODULEEXT@ handoff_ingestor.@MODULEEXT@

LUA_MODULE_LINKS=noit_binding.so snmp.so

all:	$(MODULES) $(SMODULES) $(LUA_MODULES) $(LUA_MODULE_LINKS) test_abort.@MODULEEXT@

tests:	histogram_test

.xml.xmlh:
	$(Q)$(XML2H) `echo $< | sed -e 's/\.xml$$//;'`_xml_description < $< > $@

selfcheck.lo:	selfcheck.xmlh

check_test.lo:	check_test.xmlh

ip_acl.lo:	ip_acl.xmlh

custom_config.lo:	custom_config.xmlh

reverse_check.lo:	reverse_check.xmlh

resolver_cache.lo:	resolver_cache.xmlh

LUA_MODULE_OBJS=lua_check.lo

lua_check.lo:	lua.xmlh

lua.@MODULEEXT@:	
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $(LUALIBS)
	@echo "- linking $@"

# luajit always uses .so

noit_binding.so:	noit_lua/noit_binding.so 
	$(Q)$(LN_S) -s $< $@

snmp.so:	noit_lua/snmp.so
	$(Q)$(LN_S) $< $@

noit_lua/noit_binding.so:	noit_lua_noit_binding.lo $(LUA_MODULE_OBJS)
	$(Q)mkdir -p noit_lua
	$(Q)$(MODULELD) $(SHLDFLAGS) -o noit_lua/noit_binding.@MODULEEXT@ noit_lua_noit_binding.lo $(LUA_MODULE_OBJS)
	$(Q)if [ "noit_lua/noit_binding.so" != "noit_lua/noit_binding.@MODULEEXT@" ]; then \
		rm -f noit_lua/noit_binding.so; \
		mv noit_lua/noit_binding.@MODULEEXT@ noit_lua/noit_binding.so; \
	fi
	@echo "- linking $@"

noit_lua/snmp.so:	noit_lua_snmp.lo
	$(Q)mkdir -p noit_lua
	$(Q)$(MODULELD) $(SHLDFLAGS) -o noit_lua/snmp.@MODULEEXT@ noit_lua_snmp.lo -l@LIBNETSNMP@
	$(Q)if [ "noit_lua/snmp.so" != "noit_lua/snmp.@MODULEEXT@" ]; then \
		rm -f noit_lua/snmp.so; \
		mv noit_lua/snmp.@MODULEEXT@ noit_lua/snmp.so; \
	fi
	@echo "- linking $@"

postgres.@MODULEEXT@:	postgres.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ postgres.lo $(PGLIBS) -lz -lssl -lcrypto
	@echo "- linking $@"

postgres.lo:	postgres.c postgres.xmlh
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) $(PGCFLAGS) -c $< -o $@
	@echo "- compiling $<"

postgres_ingestor.@MODULEEXT@:	postgres_ingestor.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ postgres_ingestor.lo $(PGLIBS) -lz -lssl -lcrypto
	@echo "- linking $@"

postgres_ingestor.lo: postgres_ingestor.c postgres_ingestor.xmlh
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) $(PGCFLAGS) -c $< -o $@
	@echo "- compiling $<"

handoff_ingestor.lo:	handoff_ingestor.c handoff_ingestor.xmlh

handoff_ingestor.@MODULEEXT@:	handoff_ingestor.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ handoff_ingestor.lo
	@echo "- linking $@"

handoff_ingestor.lo: handoff_ingestor.c
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) $(PGCFLAGS) -c $< -o $@
	@echo "- compiling $<"

histogram.@MODULEEXT@:	histogram.lo histogram_impl.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ histogram.lo histogram_impl.lo
	@echo "- linking $@"

histogram_test:	histogram_impl.c histogram_test.c
	$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) -DSKIP_LIBMTEV -I.. -o $@ histogram_impl.c histogram_test.c -lm

stomp_driver.lo:	stomp_driver.c stomp_driver.xmlh
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) @APRCFLAGS@ -c $< -o $@
	@echo "- compiling $<"

libstomp.lo:	libstomp.c
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) @APRCFLAGS@ -c $< -o $@
	@echo "- compiling $<"

stomp_driver.@MODULEEXT@:	stomp_driver.lo libstomp.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ stomp_driver.lo libstomp.lo @APRLIBS@
	@echo "- linking $@"

fq_driver.lo:	fq_driver.c fq_driver.xmlh

fq_driver.@MODULEEXT@:	fq_driver.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ fq_driver.lo -lfq
	@echo "- linking $@"

RABBITMQ_DRIVER_OBJS=rabbitmq_driver.lo \
	librabbitmq/amqp_api.lo librabbitmq/amqp_connection.lo \
	librabbitmq/amqp_debug.lo librabbitmq/amqp_framing.lo \
	librabbitmq/amqp_mem.lo librabbitmq/amqp_socket.lo \
	librabbitmq/amqp_table.lo

rabbitmq_driver.lo:	rabbitmq_driver.c rabbitmq_driver.xmlh

rabbitmq_driver.@MODULEEXT@:    $(RABBITMQ_DRIVER_OBJS)
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $(RABBITMQ_DRIVER_OBJS)
	@echo "- linking $@"

mysql.@MODULEEXT@:	mysql.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ mysql.lo $(MYLIBS)
	@echo "- linking $@"

mysql.lo:	mysql.c mysql.xmlh
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) $(MYCFLAGS) -c $< -o $@
	@echo "- compiling $<"

dns.@MODULEEXT@:	dns.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ dns.lo -ludns
	@echo "- linking $@"

dns.lo:	dns.c dns.xmlh
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) -c $< -o $@
	@echo "- compiling $<"

snmp.@MODULEEXT@:	snmp.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ snmp.lo -l@LIBNETSNMP@
	@echo "- linking $@"

ssh2.@MODULEEXT@:	ssh2.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ ssh2.lo -lssh2
	@echo "- linking $@"

httptrap.@MODULEEXT@:	httptrap.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ httptrap.lo @YAJLLIBS@
	@echo "- linking $@"

httptrap.lo:	httptrap.xmlh

statsd.@MODULEEXT@:	statsd.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ statsd.lo
	@echo "- linking $@"

statsd.lo:	statsd.xmlh

collectd.@MODULEEXT@:	collectd.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ collectd.lo -lssl @YAJLLIBS@
	@echo "- linking $@"

collectd.lo:	collectd.c collectd.xmlh
	$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) $(SHCFLAGS) -c collectd.c -o $@
	@echo "- compiling $<"

ganglia.@MODULEEXT@:	ganglia.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ ganglia.lo -lssl 
	@echo "- linking $@"

ganglia.lo:	ganglia.c ganglia.xmlh
	$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) $(SHCFLAGS) -c ganglia.c -o $@
	@echo "- compiling $<"

ssh2.lo:	ssh2.xmlh

ping_icmp.lo:	ping_icmp.xmlh

ping_icmp.@MODULEEXT@:	ping_icmp.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $<
	@echo "- linking $@"

external.lo:	external.xmlh

external.@MODULEEXT@:	external.lo external_proc.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ external.lo external_proc.lo
	@echo "- linking $@"

test_abort.@MODULEEXT@:	test_abort.lo
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $<
	@echo "- linking $@"

.lo.@MODULEEXT@:
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $<
	@echo "- linking $@"

snmp.lo:	snmp.xmlh snmptrap.xmlh

.c.lo:
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) -c $< -o $@
	@echo "- compiling $<"

alldocs:
	for c in *.xml ; do \
		$(XSLTPROC) module.xsl $$c | $(XMLLINT) --format - | sed -e 's/ xmlns=""//g;' > $(top_srcdir)/docs/config/modules/$$c ; \
	done

install:	install-modules install-smodules

install-modules:	$(MODULES) $(LUA_MODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(libdir)/noit_lua
	for mod in $(LUA_MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(libdir)/noit_lua/`echo $$mod | sed -e 's/^noit_lua\///;'` ; \
	done

install-smodules:	$(SMODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(SMODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done

clean:
	rm -f *.lo *.@MODULEEXT@ *.xmlh $(RABBITMQ_DRIVER_OBJS)

distclean:	clean
	rm -f Makefile

Makefile.dep:
	$(CC) -I.. $(CPPFLAGS) $(CFLAGS) @APRCFLAGS@ \
		$(DEPFLAGS) -c *.c | sed -e 's/\.o:/\.lo:/' > Makefile.dep
	$(top_srcdir)/buildtools/culldeps.sh Makefile.dep

include Makefile.dep
