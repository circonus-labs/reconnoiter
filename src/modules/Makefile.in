.SUFFIXES: .lo .@MODULEEXT@ .xml .xmlh

Q=
ifeq ($(V),)
  Q=@
endif

prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@

CC=@CC@
CXX=@CXX@
LD=@LD@
LN_S=@LN_S@
CPPFLAGS=-I.. @CPPFLAGS@
CFLAGS=@CFLAGS@
CXXFLAGS=@CXXFLAGS@
DEPFLAGS=@DEPFLAGS@
PGCFLAGS=@PGCFLAGS@
MYCFLAGS=@MYCFLAGS@
SHCFLAGS=@SHCFLAGS@
SHCXXFLAGS=@SHCXXFLAGS@
MODULELD=@MODULELD@
MODULECC=@MODULECC@
MODULECXX=@CXX@
MODULESHCXXFLAGS=@MODULESHCXXFLAGS@ -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -std=c++17
MODULEEXT=@MODULEEXT@
LDFLAGS=@LDFLAGS@
SHLDFLAGS=@SHLDFLAGS@
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@
PGLIBS=@PGLIBS@
MYLIBS=@MYLIBS@
INSTALL=@INSTALL@
MODULES_DIR=@MODULES_DIR@
XSLTPROC=@XSLTPROC@
XMLLINT=@XMLLINT@
XML2H=@top_srcdir@/buildtools/xml2h
LUALIBS=@LUALIBS@
MTEV_LIBDIR=@MTEV_LIBDIR@

top_srcdir=@top_srcdir@

MODULES=check_test.@MODULEEXT@ ping_icmp.@MODULEEXT@ \
	dns.@MODULEEXT@ selfcheck.@MODULEEXT@ custom_config.@MODULEEXT@ \
	external.@MODULEEXT@ collectd.@MODULEEXT@ httptrap.@MODULEEXT@ \
	ip_acl.@MODULEEXT@ statsd.@MODULEEXT@ ganglia.@MODULEEXT@ \
	resolver_cache.@MODULEEXT@ histogram.@MODULEEXT@ \
	reverse_check.@MODULEEXT@ prometheus.@MODULEEXT@ \
	graphite.@MODULEEXT@ opentsdb.@MODULEEXT@ \
	@BUILD_MODULES@

LUA_MODULES=noit_lua/noit_binding.so noit_lua/snmp.so noit_lua/libnoit_binding.so

LIBNOIT_LUA_MODULES=noit_lua/libnoit_binding.so

SMODULES=@BUILD_SMODULES@ \
	rabbitmq_driver.@MODULEEXT@ handoff_ingestor.@MODULEEXT@

TESTMODULES=test_abort.@MODULEEXT@ test_ingestor.@MODULEEXT@

all:	$(MODULES) $(SMODULES) $(LUA_MODULES) $(TESTMODULES)

.xml.xmlh:
	$(Q)$(XML2H) `echo $< | sed -e 's/\.xml$$//;'`_xml_description < $< > $@

selfcheck.lo:	selfcheck.xmlh broker.xmlh

check_test.lo:	check_test.xmlh

ip_acl.lo:	ip_acl.xmlh

custom_config.lo:	custom_config.xmlh

reverse_check.lo:	reverse_check.xmlh

resolver_cache.lo:	resolver_cache.xmlh

LUA_MODULE_OBJS=lua_check.lo

lua_check.lo:	lua.xmlh

lua.@MODULEEXT@:  $(LUA_MODULE_OBJS)
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $(LUA_MODULE_OBJS)	$(LUALIBS)

# luajit always uses .so

noit_lua/noit_binding.so:	noit_lua_noit_binding.lo
	@echo "- linking $@"
	$(Q)mkdir -p noit_lua
	$(Q)$(MODULELD) $(SHLDFLAGS) -o noit_lua/noit_binding.@MODULEEXT@ noit_lua_noit_binding.lo
	$(Q)if [ "noit_lua/noit_binding.so" != "noit_lua/noit_binding.@MODULEEXT@" ]; then \
		rm -f noit_lua/noit_binding.so; \
		mv noit_lua/noit_binding.@MODULEEXT@ noit_lua/noit_binding.so; \
	fi

noit_lua/libnoit_binding.so:	noit_lua_libnoit_binding.lo
	@echo "- linking $@"
	$(Q)mkdir -p noit_lua
	$(Q)$(MODULELD) $(SHLDFLAGS) -o noit_lua/libnoit_binding.@MODULEEXT@ noit_lua_libnoit_binding.lo
	$(Q)if [ "noit_lua/libnoit_binding.so" != "noit_lua/libnoit_binding.@MODULEEXT@" ]; then \
		rm -f noit_lua/libnoit_binding.so; \
		mv noit_lua/libnoit_binding.@MODULEEXT@ noit_lua/libnoit_binding.so; \
	fi

noit_lua/snmp.so:	noit_lua_snmp.lo
	@echo "- linking $@"
	$(Q)mkdir -p noit_lua
	$(Q)$(MODULELD) $(SHLDFLAGS) -o noit_lua/snmp.@MODULEEXT@ noit_lua_snmp.lo -l@LIBNETSNMP@
	$(Q)if [ "noit_lua/snmp.so" != "noit_lua/snmp.@MODULEEXT@" ]; then \
		rm -f noit_lua/snmp.so; \
		mv noit_lua/snmp.@MODULEEXT@ noit_lua/snmp.so; \
	fi

postgres.@MODULEEXT@:	postgres.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ postgres.lo $(PGLIBS) -lz -lssl -lcrypto

postgres.lo:	postgres.c postgres.xmlh
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) $(PGCFLAGS) -c $< -o $@

postgres_ingestor.@MODULEEXT@:	postgres_ingestor.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ postgres_ingestor.lo $(PGLIBS) -lz -lssl -lcrypto

postgres_ingestor.lo: postgres_ingestor.c postgres_ingestor.xmlh
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) $(PGCFLAGS) -c $< -o $@

test_ingestor.lo:	test_ingestor.c test_ingestor.xmlh

test_ingestor.@MODULEEXT@:	test_ingestor.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ test_ingestor.lo

handoff_ingestor.lo:	handoff_ingestor.c handoff_ingestor.xmlh

handoff_ingestor.@MODULEEXT@:	handoff_ingestor.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ handoff_ingestor.lo

handoff_ingestor.lo: handoff_ingestor.c
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) $(PGCFLAGS) -c $< -o $@

histogram.@MODULEEXT@:	histogram.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ histogram.lo -lcircllhist

stomp_driver.lo:	stomp_driver.c stomp_driver.xmlh
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) @APRCFLAGS@ @APRCPPFLAGS@ -c $< -o $@

libstomp.lo:	libstomp.c
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) @APRCFLAGS@ @APRCPPFLAGS@ -c $< -o $@

stomp_driver.@MODULEEXT@:	stomp_driver.lo libstomp.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ stomp_driver.lo libstomp.lo @APRLIBS@

fq_driver.lo:	fq_driver.c fq_driver.xmlh

fq_driver.@MODULEEXT@:	fq_driver.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ fq_driver.lo -lfq

RABBITMQ_DRIVER_OBJS=rabbitmq_driver.lo \
	librabbitmq/amqp_api.lo librabbitmq/amqp_connection.lo \
	librabbitmq/amqp_debug.lo librabbitmq/amqp_framing.lo \
	librabbitmq/amqp_mem.lo librabbitmq/amqp_socket.lo \
	librabbitmq/amqp_table.lo

rabbitmq_driver.lo:	rabbitmq_driver.c rabbitmq_driver.xmlh

rabbitmq_driver.@MODULEEXT@:    $(RABBITMQ_DRIVER_OBJS)
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $(RABBITMQ_DRIVER_OBJS)

mysql.@MODULEEXT@:	mysql.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ mysql.lo $(MYLIBS)

mysql.lo:	mysql.c mysql.xmlh
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) $(MYCFLAGS) -c $< -o $@

dns.@MODULEEXT@:	dns.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ dns.lo -ludns

dns.lo:	dns.c dns.xmlh
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(SHCFLAGS) -c $< -o $@

snmp.@MODULEEXT@:	snmp.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ snmp.lo -l@LIBNETSNMP@

httptrap.@MODULEEXT@:	httptrap.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ httptrap.lo @YAJLLIBS@

httptrap.lo:	httptrap.xmlh

prometheus.pb-c.c prometheus.pb-c.h: prometheus.proto
	(protoc-c prometheus.proto --c_out=.)

types.pb-c.c types.pb-c.h: types.proto
	(protoc-c types.proto --c_out=.)

prometheus.c: prometheus.pb-c.h types.pb-c.h

prometheus.@MODULEEXT@:	prometheus.lo prometheus.pb-c.lo types.pb-c.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -fPIC -o $@ prometheus.lo prometheus.pb-c.lo types.pb-c.lo

prometheus.lo:	prometheus.xmlh

graphite.@MODULEEXT@:	graphite.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -fPIC -o $@ graphite.lo -lptools

graphite.lo:	graphite_tls.xmlh graphite_plain.xmlh graphite_pickle.xmlh graphite.cpp

opentsdb.@MODULEEXT@:	opentsdb.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -fPIC -o $@ opentsdb.lo

opentsdb.lo:	opentsdb.xmlh opentsdb.c

statsd.@MODULEEXT@:	statsd.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ statsd.lo

statsd.lo:	statsd.xmlh statsd_tcp.xmlh

collectd.@MODULEEXT@:	collectd.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ collectd.lo -lssl @YAJLLIBS@

collectd.lo:	collectd.c collectd.xmlh
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) $(SHCFLAGS) -c collectd.c -o $@

ganglia.@MODULEEXT@:	ganglia.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ ganglia.lo -lssl 

ganglia.lo:	ganglia.c ganglia.xmlh
	@echo "- compiling $<"
	$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) $(SHCFLAGS) -c ganglia.c -o $@

ping_icmp.lo:	ping_icmp.xmlh

ping_icmp.@MODULEEXT@:	ping_icmp.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $<

external.lo:	external.xmlh

external.@MODULEEXT@:	external.lo external_proc.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ external.lo external_proc.lo

test_abort.@MODULEEXT@:	test_abort.lo
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $<

.lo.@MODULEEXT@:
	@echo "- linking $@"
	$(Q)$(MODULELD) $(SHLDFLAGS) -o $@ $<

snmp.lo:	snmp.xmlh snmptrap.xmlh


.cpp.lo:
	@echo "- compiling $<"
	$(Q)$(MODULECXX) $(CPPFLAGS) $(MODULESHCXXFLAGS) -c $< -o $@

.c.lo:
	@echo "- compiling $<"
	$(Q)$(MODULECC) $(CPPFLAGS) $(SHCFLAGS) -c $< -o $@

alldocs:
	@echo "- buiding module docs"
	$(Q)for c in *.xml ; do \
		$(XSLTPROC) module.xsl $$c | $(XMLLINT) --format - | sed -e 's/ xmlns=""//g;' > $(top_srcdir)/docs/config/modules/$$c ; \
	done

install:	install-modules install-smodules

install-libnoit-modules:	$(LIBNOIT_LUA_MODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MTEV_LIBDIR)/mtev_lua
	for mod in $(LIBNOIT_LUA_MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MTEV_LIBDIR)/mtev_lua/`echo $$mod | sed -e 's/^noit_lua\///;'` ; \
	done

install-modules:	$(MODULES) $(LUA_MODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(libdir)/noit_lua
	for mod in $(LUA_MODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(libdir)/noit_lua/`echo $$mod | sed -e 's/^noit_lua\///;'` ; \
	done

install-smodules:	$(SMODULES)
	$(top_srcdir)/buildtools/mkinstalldirs $(DESTDIR)$(MODULES_DIR)
	for mod in $(SMODULES); do \
		$(INSTALL) -m 0755 $$mod $(DESTDIR)$(MODULES_DIR)/$$mod ; \
	done

clean:
	rm -f *.lo *.@MODULEEXT@ *.xmlh $(RABBITMQ_DRIVER_OBJS)
	rm -f prometheus.pb-c.* types.pb-c.*

distclean:	clean
	rm -f Makefile

Makefile.dep:
	$(CC) -I.. $(CPPFLAGS) $(CFLAGS) @APRCFLAGS@ @APRCPPFLAGS@ \
		$(DEPFLAGS) -c *.c | sed -e 's/\.o:/\.lo:/' > Makefile.dep
	$(top_srcdir)/buildtools/culldeps.sh Makefile.dep

include Makefile.dep
