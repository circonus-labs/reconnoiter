<?xml version="1.0"?>
<section>
  <title>postgres_ingestor</title>
  <para>This module imports noitd data into postgres.</para>
  <variablelist>
    <varlistentry>
      <term>loader</term>
      <listitem>
        <para>C</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>image</term>
      <listitem>
        <para>postgres_ingestor.so</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <section>
    <title>Module Configuration</title>
  </section>
  <section>
    <title>Check Configuration</title>
  </section>
  <example>
    <title>Using the postgres_ingestor.</title>
    <para>This example loads the postgres_ingestor and configures it.</para>
    <programlisting>
      &lt;stratcon&gt;
        &lt;modules&gt;
          &lt;module image="postgres_ingestor" name="postgres_ingestor" /&gt;
        &lt;/modules&gt;
        &lt;database&gt;
          &lt;journal&gt;
            &lt;path&gt;/var/log/stratcon.persist&lt;/path&gt;
          &lt;/journal&gt;
          &lt;dbconfig&gt;
            &lt;host&gt;db1&lt;/host&gt;
            &lt;dbname&gt;reconnoiter&lt;/dbname&gt;
            &lt;user&gt;stratcon&lt;/user&gt;
            &lt;password&gt;unguessable&lt;/password&gt;
          &lt;/dbconfig&gt;
          &lt;statements&gt;
            &lt;!-- These are optional and used for stuff like setting search paths --&gt;
            &lt;!--
            &lt;metanodepostconnect&gt;
              SELECT do_some_magic();
            &lt;/metanodepostconnect&gt;
            &lt;storagepostconnect&gt;
              SELECT do_some_magic($1,$2);
            &lt;/storagepostconnect&gt;
            --&gt;
            &lt;allchecks&gt;
              SELECT remote_address, id, target, module, name
                FROM check_currently
            &lt;/allchecks&gt;
            &lt;findcheck&gt;
              SELECT remote_address, id, target, module, name
                FROM check_currently
               WHERE sid = $1
            &lt;/findcheck&gt;
            &lt;allstoragenodes&gt;
              SELECT storage_node_id, fqdn, dsn
                FROM stratcon.storage_node
            &lt;/allstoragenodes&gt;
            &lt;findstoragenode&gt;
              SELECT fqdn, dsn
                FROM stratcon.storage_node
               WHERE storage_node_id = $1
            &lt;/findstoragenode&gt;
            &lt;mapallchecks&gt;
              SELECT id, sid, noit as remote_cn, storage_node_id, fqdn, dsn
                FROM stratcon.map_uuid_to_sid LEFT JOIN stratcon.storage_node USING (storage_node_id)
            &lt;/mapallchecks&gt;
            &lt;mapchecktostoragenode&gt;
              SELECT o_storage_node_id as storage_node_id, o_sid as sid,
                     o_fqdn as fqdn, o_dsn as dsn, o_noit as remote_cn
                FROM stratcon.map_uuid_to_sid($1,$2)
            &lt;/mapchecktostoragenode&gt;
            &lt;check&gt;
              INSERT INTO check_archive_%Y%m%d
                          (remote_address, whence, sid, id, target, module, name)
                   VALUES ($1, 'epoch'::timestamptz + ($2 || ' seconds')::interval,
                           $3, $4, $5, $6, $7)
            &lt;/check&gt;
            &lt;status&gt;
              INSERT INTO check_status_archive_%Y%m%d
                          (whence, sid, state, availability, duration, status)
                   VALUES ('epoch'::timestamptz + ($1 || ' seconds')::interval,
                           $2, $3, $4, $5, $6)
            &lt;/status&gt;
            &lt;metric_numeric&gt;
              INSERT INTO metric_numeric_archive_%Y%m%d
                          (whence, sid, name, value)
                   VALUES ('epoch'::timestamptz + ($1 || ' seconds')::interval,
                           $2, $3, $4)
            &lt;/metric_numeric&gt;
            &lt;metric_text&gt;
              INSERT INTO metric_text_archive_%Y%m%d
                          ( whence, sid, name,value)
                   VALUES ('epoch'::timestamptz + ($1 || ' seconds')::interval,
                           $2, $3, $4)
            &lt;/metric_text&gt;
            &lt;config&gt;
              SELECT stratcon.update_config
                     ($1, $2, $3,
                      'epoch'::timestamptz + ($4 || ' seconds')::interval,
                      $5)
            &lt;/config&gt;
            &lt;findconfig&gt;
              SELECT config FROM stratcon.current_node_config WHERE remote_cn = $1
            &lt;/findconfig&gt;
          &lt;/statements&gt;
        &lt;/database&gt;
      &lt;/stratcon&gt;
    </programlisting>
  </example>
</section>
